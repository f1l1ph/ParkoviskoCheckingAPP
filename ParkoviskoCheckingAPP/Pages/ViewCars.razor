@page "/ViewCars"

@using Microsoft.AspNetCore.Components.Rendering
@using ParkoviskoCheckingAPP.Data
@inject CarService service
@using ParkoviskoCheckingAPP.Components

<button class="btn btn-primary" @onclick="Refresh">Refresh</button>

@if (haveInternet)
{
    <p>I have internet</p>
}
else
{
    <p>I don't have internet ): </p>
}

<div class="card-container">
    @if (cars == null || cars.Count == 0)
    {
        @if (cars != null && cars.Count == 0)
        {
            <p><em>Haven't found any cars</em></p>
        }
        else
        {
            @if(cars == null && haveRefreshed)
            {
                <p>No cars sorry</p>
            }
            else
            {
                <p><em>Loading...</em></p>
            }
        }
    }
    else
    {
        @foreach(var car_ in cars)
        {
            <CarCard car="car_" Refresh="Refresh"/>
        }
    }
</div>

@code {
    //check for internet connection
    NetworkAccess accessType = Connectivity.Current.NetworkAccess;
    bool haveInternet = false;
    private List<Car> cars = null;
    bool haveRefreshed = false;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();  

        if (accessType == NetworkAccess.Internet)
        {
            haveInternet = true;
        }
    }

    async Task Refresh()
    {
        cars = await service.GetCarsAsync();
        haveRefreshed = true;
    }
}