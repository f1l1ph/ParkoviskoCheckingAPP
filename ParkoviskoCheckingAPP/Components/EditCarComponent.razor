@using ParkoviskoCheckingAPP.Data
@using ParkoviskoCheckingAPP.services
@inject CarService service
@inject ValidationService _ValidationService

@if (car != null)
{
    <EditForm Model="@car" OnValidSubmit="UpdateCar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Názov:</label>
            <InputText id="name" @bind-Value="car.Name" class="form-control" required />
        </div>

        <div class="form-group">
            <label for="plateNumber">Špz:</label>
            @if (invalidPlate)
            {
                <label style="color:red;">Neplatná Špz</label>
            }
            <InputText id="plateNumber" @bind-Value="car.PlateNumber" class="form-control" required />
        </div>

        <div class="form-group">
            <label for="expirationDate">Dátum zmazania:</label>
            <InputDate id="expirationDate" @bind-Value="car.ExpirationDate" class="form-control" />
        </div>

        <div class="form-group">
            <label for="description">Popis:</label>
            <InputText id="description" @bind-Value="car.Description" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Update Car</button>
    </EditForm>
}
else
{
    <div class="loader"></div>
}

@code {
    [Parameter] public Car car { get; set; }
    [Parameter] public EventCallback Refresh{ get; set; }

    bool invalidPlate = false;

    async Task UpdateCar()
    {
        if (_ValidationService.ValidateLicensePlate(car.PlateNumber))
        {
            await service.EditCar(car.ID, car);
            await Refresh.InvokeAsync();
        }
        else
        {
            invalidPlate = true;
        }
        
    }
}
